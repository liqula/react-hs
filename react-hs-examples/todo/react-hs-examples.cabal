name:                react-hs-examples
version:             0.1.0
synopsis:            An example react-hs application
category:            Web
homepage:            https://github.com/liqula/react-hs
license:             BSD3
license-file:        LICENSE
author:              John Lenz <wuzzeb@gmail.com>
maintainer:          Matthias Fischmann <mf@zerobuzz.net>
build-type:          Simple
description:         See the README below.
cabal-version:       >=1.10

extra-source-files:
    README.md
    Makefile
    html/*.html
    html/*.css
    node/*.js

source-repository head
    type: git
    location: https://github.com/liqula/react-hs

executable todo
  ghc-options: -Wall -fno-warn-redundant-constraints
  cpp-options: -DGHCJS_BROWSER

  other-modules: TodoComponents
               , TodoDispatcher
               , TodoStore
               , TodoViews

  default-language: Haskell2010
  hs-source-dirs: src
  main-is: Main.hs
  build-depends: base
               , react-hs >= 0.1 && < 0.2
               , text
               , ghcjs-base

  default-extensions:
    AllowAmbiguousTypes
    BangPatterns
    CPP
    DataKinds
    DeriveGeneric
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GeneralizedNewtypeDeriving
    LambdaCase
    MagicHash
    MultiParamTypeClasses
    OverloadedStrings
    PolyKinds
    QuasiQuotes
    RecordWildCards
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    UndecidableInstances
    ViewPatterns


executable todo-node
  ghc-options: -Wall -fno-warn-redundant-constraints

  other-modules: TodoComponents
               , TodoDispatcher
               , TodoStore
               , TodoViews

  default-language: Haskell2010
  hs-source-dirs: src
  main-is: NodeMain.hs
  build-depends: base
               , react-hs >= 0.1 && < 0.2
               , text
               , ghcjs-base

  default-extensions:
    AllowAmbiguousTypes
    BangPatterns
    CPP
    DataKinds
    DeriveGeneric
    EmptyDataDecls
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GeneralizedNewtypeDeriving
    LambdaCase
    MagicHash
    MultiParamTypeClasses
    OverloadedStrings
    PolyKinds
    QuasiQuotes
    RecordWildCards
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    UndecidableInstances
    ViewPatterns
